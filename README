myst
====

1) Install NodeJS. Use homebrew: brew install node

2) Install MongoDB: http://mongodb.org/. I used Homebrew: brew install mongodb

3) Create folder to store node apps and clone this repo.

4) run: npm install -g express. "This installs some core Express functionality right into our Node installation, making it available globally so we can use it anywhere we want"

5) run: npm install -g express-generator. "As of Express 4.0, you'll need to install the express "generator" as well. This is following a trend in the node industry of breaking out core functionality from site-scaffolding utility"

6) Clone this repo.

7) I ignored a /data folder in the repo, this is where mongo will store its db files so create one now.

8) in data folder (created above) run: mongod --dbpath [apppath]/data. "You'll see the Mongo server start up. This is going to take a while if it's the first time, because it has to do some preallocating of space and a few other housekeeping tasks"

9) run: npm start. Myst is running. Double check port settings for access, default is 3000.

asset buliding notes
====

I constructed the game using the Myst iPhone data. They were pretty slack in protecting the content so I was able to rip all the images, audio and video. I was also able to parse game data form the incldued SQLite databases. To read about how this information was extracted and built, please refer to the following README files:

/panels/database/README         - about the conversion of SQLite to CSV and then Numbers Spreadsheets
/public/assets/audio/README     - using the OSX command "find" to convert all source audio files to mp3 with ffmpeg
